Instructions:
    Say you have an array for which the ith element is the price of a given stock on day i.

    If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.

    Note that you cannot sell a stock before you buy one.
Explanation:
    First we make a 2D For loop of the array.
    I don't think it matters if you set the i as the selling integer and j as the buying integer, but I ended up using
    the inverse for this challenge.

    Every loop we check if sell > buy (so we make profit), and if sell - buy (since this we have established sell is greater) is greater than current profit max

    By the end of the loop, it will have the maximum profit.

    The reason we add i+1 is so we save time. If we iterate over both starting with 0, we will have redundantly compared
    the same integers again, starting from 0 twice.